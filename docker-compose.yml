version: "3.7" # optional since v1.27.0
services:
  ytmp3-host-tg-bot:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ytmp3-host-go
    depends_on:
      - redis
    networks:
      - goapp
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_BOT_CHANNEL_ID=${TG_BOT_CHANNEL_ID}
      - FIBER_URL=${FIBER_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
      - REDIS_DB=${REDIS_DB}
      - ALLOWED_IPS=${ALLOWED_IPS}
      - CONTAINER_TYPE=bot
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ytmp3-host-go:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ytmp3-host-go
    ports:
      - "5001"
    depends_on:
      - redis
    networks:
      - goapp
    environment:
      - TG_BOT_TOKEN=${TG_BOT_TOKEN}
      - TG_BOT_CHANNEL_ID=${TG_BOT_CHANNEL_ID}
      - FIBER_URL=${FIBER_URL}
      - FIBER_HOSTNAME=${FIBER_HOSTNAME}
      - FIBER_PORT=5001
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
      - REDIS_DB=${REDIS_DB}
      - ALLOWED_IPS=${ALLOWED_IPS}
    deploy:
      replicas: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"
  redis:
    image: redis:latest
    command: --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - goapp
    restart: unless-stopped
  nginx:
    image: nginx:latest
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: 
      - ytmp3-host-go
    environment:
      - PORT=8090
      - NGINX_PORT=8090
    ports: 
      - "8090:8090"
    networks: 
      - goapp

networks:
  goapp:
    driver: bridge
    ##